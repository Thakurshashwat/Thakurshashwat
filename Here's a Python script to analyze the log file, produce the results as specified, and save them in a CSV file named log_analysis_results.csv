import re
import csv
from collections import Counter

def analyze_log_file(log_file_path, output_file_path, threshold=10):
    ip_pattern = r'\b(?:\d{1,3}\.){3}\d{1,3}\b'
    endpoint_pattern = r'\"(?:GET|POST|PUT|DELETE|HEAD|OPTIONS|PATCH)\s+(\S+)\s+HTTP'
    failed_login_pattern = r'401|Invalid credentials'
    
    ip_counter = Counter()
    endpoint_counter = Counter()
    failed_login_counter = Counter()

    try:
        with open(log_file_path, 'r') as file:
            for line in file:
                # Count requests per IP
                ip_match = re.search(ip_pattern, line)
                if ip_match:
                    ip_counter[ip_match.group(0)] += 1

                # Count endpoint accesses
                endpoint_match = re.search(endpoint_pattern, line)
                if endpoint_match:
                    endpoint_counter[endpoint_match.group(1)] += 1

                # Count failed logins
                if re.search(failed_login_pattern, line, re.IGNORECASE):
                    if ip_match:
                        failed_login_counter[ip_match.group(0)] += 1

        # Get the most frequently accessed endpoint
        most_frequent_endpoint = endpoint_counter.most_common(1)[0] if endpoint_counter else None

        # Get IPs with suspicious activity
        suspicious_ips = {ip: count for ip, count in failed_login_counter.items() if count > threshold}

        # Write results to CSV
        with open(output_file_path, 'w', newline='') as csvfile:
            writer = csv.writer(csvfile)

            # Requests per IP
            writer.writerow(['Requests per IP'])
            writer.writerow(['IP Address', 'Request Count'])
            for ip, count in ip_counter.items():
                writer.writerow([ip, count])

            writer.writerow([])  # Blank row for separation

            # Most Accessed Endpoint
            writer.writerow(['Most Accessed Endpoint'])
            writer.writerow(['Endpoint', 'Access Count'])
            if most_frequent_endpoint:
                writer.writerow(most_frequent_endpoint)

            writer.writerow([])  # Blank row for separation

            # Suspicious Activity
            writer.writerow(['Suspicious Activity'])
            writer.writerow(['IP Address', 'Failed Login Count'])
            for ip, count in suspicious_ips.items():
                writer.writerow([ip, count])

        # Print summary
        print("Analysis complete. Results saved to:", output_file_path)

    except FileNotFoundError:
        print(f"Error: File not found at path {log_file_path}")
    except Exception as e:
        print(f"An error occurred: {e}")

# Example usage
log_file_path = 'sample.log'  # Replace with your log file path
output_file_path = 'log_analysis_results.csv'
analyze_log_file(log_file_path, output_file_path)
