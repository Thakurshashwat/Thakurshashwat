import re
from collections import Counter

def find_most_frequent_endpoint(log_file_path):
    """
    Parse the log file to extract endpoints and identify the most accessed endpoint.

    :param log_file_path: Path to the log file
    :return: None (Prints the most frequently accessed endpoint and its count)
    """
    endpoint_pattern = r'\"(?:GET|POST|PUT|DELETE|HEAD|OPTIONS|PATCH)\s+(\S+)\s+HTTP'
    endpoint_counter = Counter()

    try:
        with open(log_file_path, 'r') as file:
            for line in file:
                # Extract endpoints from each line
                match = re.search(endpoint_pattern, line)
                if match:
                    endpoint = match.group(1)  # Extract the endpoint
                    endpoint_counter[endpoint] += 1
        
        # Find the most frequently accessed endpoint
        if endpoint_counter:
            most_frequent = endpoint_counter.most_common(1)[0]
            endpoint, count = most_frequent
            print(f"Most Frequently Accessed Endpoint:\n{endpoint} (Accessed {count} times)")
        else:
            print("No endpoints found in the log file.")

    except FileNotFoundError:
        print(f"Error: File not found at path {log_file_path}")
    except Exception as e:
        print(f"An error occurred: {e}")

# Example usage
log_file_path = 'example.log'  # Replace with your log file path
find_most_frequent_endpoint(log_file_path)

//Example Output:

Most Frequently Accessed Endpoint:
/home (Accessed 403 times)

Replace 'example.log' with the actual path to your log file and run the script to identify the most frequently accessed endpoint.
